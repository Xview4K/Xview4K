#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3506
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="AdventureWorks")]
public partial class AdvWorksDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertProduct(Product instance);
  partial void UpdateProduct(Product instance);
  partial void DeleteProduct(Product instance);
  partial void InsertProductProductPhoto(ProductProductPhoto instance);
  partial void UpdateProductProductPhoto(ProductProductPhoto instance);
  partial void DeleteProductProductPhoto(ProductProductPhoto instance);
  partial void InsertProductPhoto(ProductPhoto instance);
  partial void UpdateProductPhoto(ProductPhoto instance);
  partial void DeleteProductPhoto(ProductPhoto instance);
  partial void InsertProductModel(ProductModel instance);
  partial void UpdateProductModel(ProductModel instance);
  partial void DeleteProductModel(ProductModel instance);
  partial void InsertProductReview(ProductReview instance);
  partial void UpdateProductReview(ProductReview instance);
  partial void DeleteProductReview(ProductReview instance);
  #endregion
	
	public AdvWorksDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AdventureWorksConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public AdvWorksDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AdvWorksDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AdvWorksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AdvWorksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Product> Products
	{
		get
		{
			return this.GetTable<Product>();
		}
	}
	
	public System.Data.Linq.Table<ProductProductPhoto> ProductProductPhotos
	{
		get
		{
			return this.GetTable<ProductProductPhoto>();
		}
	}
	
	public System.Data.Linq.Table<ProductPhoto> ProductPhotos
	{
		get
		{
			return this.GetTable<ProductPhoto>();
		}
	}
	
	public System.Data.Linq.Table<ProductModel> ProductModels
	{
		get
		{
			return this.GetTable<ProductModel>();
		}
	}
	
	public System.Data.Linq.Table<ProductReview> ProductReviews
	{
		get
		{
			return this.GetTable<ProductReview>();
		}
	}
}

[Table(Name="Production.Product")]
public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private string _Name;
	
	private string _ProductNumber;
	
	private bool _MakeFlag;
	
	private bool _FinishedGoodsFlag;
	
	private string _Color;
	
	private short _SafetyStockLevel;
	
	private short _ReorderPoint;
	
	private decimal _StandardCost;
	
	private decimal _ListPrice;
	
	private string _Size;
	
	private string _SizeUnitMeasureCode;
	
	private string _WeightUnitMeasureCode;
	
	private System.Nullable<decimal> _Weight;
	
	private int _DaysToManufacture;
	
	private string _ProductLine;
	
	private string _Class;
	
	private string _Style;
	
	private System.Nullable<int> _ProductSubcategoryID;
	
	private System.Nullable<int> _ProductModelID;
	
	private System.DateTime _SellStartDate;
	
	private System.Nullable<System.DateTime> _SellEndDate;
	
	private System.Nullable<System.DateTime> _DiscontinuedDate;
	
	private System.Guid _rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<ProductProductPhoto> _ProductProductPhotos;
	
	private EntitySet<ProductReview> _ProductReviews;
	
	private EntityRef<ProductModel> _ProductModel;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProductNumberChanging(string value);
    partial void OnProductNumberChanged();
    partial void OnMakeFlagChanging(bool value);
    partial void OnMakeFlagChanged();
    partial void OnFinishedGoodsFlagChanging(bool value);
    partial void OnFinishedGoodsFlagChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSafetyStockLevelChanging(short value);
    partial void OnSafetyStockLevelChanged();
    partial void OnReorderPointChanging(short value);
    partial void OnReorderPointChanged();
    partial void OnStandardCostChanging(decimal value);
    partial void OnStandardCostChanged();
    partial void OnListPriceChanging(decimal value);
    partial void OnListPriceChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnSizeUnitMeasureCodeChanging(string value);
    partial void OnSizeUnitMeasureCodeChanged();
    partial void OnWeightUnitMeasureCodeChanging(string value);
    partial void OnWeightUnitMeasureCodeChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnDaysToManufactureChanging(int value);
    partial void OnDaysToManufactureChanged();
    partial void OnProductLineChanging(string value);
    partial void OnProductLineChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnProductSubcategoryIDChanging(System.Nullable<int> value);
    partial void OnProductSubcategoryIDChanged();
    partial void OnProductModelIDChanging(System.Nullable<int> value);
    partial void OnProductModelIDChanged();
    partial void OnSellStartDateChanging(System.DateTime value);
    partial void OnSellStartDateChanged();
    partial void OnSellEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSellEndDateChanged();
    partial void OnDiscontinuedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDiscontinuedDateChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Product()
	{
		this._ProductProductPhotos = new EntitySet<ProductProductPhoto>(new Action<ProductProductPhoto>(this.attach_ProductProductPhotos), new Action<ProductProductPhoto>(this.detach_ProductProductPhotos));
		this._ProductReviews = new EntitySet<ProductReview>(new Action<ProductReview>(this.attach_ProductReviews), new Action<ProductReview>(this.detach_ProductReviews));
		this._ProductModel = default(EntityRef<ProductModel>);
		OnCreated();
	}
	
	[Column(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[Column(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[Column(Storage="_ProductNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string ProductNumber
	{
		get
		{
			return this._ProductNumber;
		}
		set
		{
			if ((this._ProductNumber != value))
			{
				this.OnProductNumberChanging(value);
				this.SendPropertyChanging();
				this._ProductNumber = value;
				this.SendPropertyChanged("ProductNumber");
				this.OnProductNumberChanged();
			}
		}
	}
	
	[Column(Storage="_MakeFlag", DbType="Bit NOT NULL")]
	public bool MakeFlag
	{
		get
		{
			return this._MakeFlag;
		}
		set
		{
			if ((this._MakeFlag != value))
			{
				this.OnMakeFlagChanging(value);
				this.SendPropertyChanging();
				this._MakeFlag = value;
				this.SendPropertyChanged("MakeFlag");
				this.OnMakeFlagChanged();
			}
		}
	}
	
	[Column(Storage="_FinishedGoodsFlag", DbType="Bit NOT NULL")]
	public bool FinishedGoodsFlag
	{
		get
		{
			return this._FinishedGoodsFlag;
		}
		set
		{
			if ((this._FinishedGoodsFlag != value))
			{
				this.OnFinishedGoodsFlagChanging(value);
				this.SendPropertyChanging();
				this._FinishedGoodsFlag = value;
				this.SendPropertyChanged("FinishedGoodsFlag");
				this.OnFinishedGoodsFlagChanged();
			}
		}
	}
	
	[Column(Storage="_Color", DbType="NVarChar(15)")]
	public string Color
	{
		get
		{
			return this._Color;
		}
		set
		{
			if ((this._Color != value))
			{
				this.OnColorChanging(value);
				this.SendPropertyChanging();
				this._Color = value;
				this.SendPropertyChanged("Color");
				this.OnColorChanged();
			}
		}
	}
	
	[Column(Storage="_SafetyStockLevel", DbType="SmallInt NOT NULL")]
	public short SafetyStockLevel
	{
		get
		{
			return this._SafetyStockLevel;
		}
		set
		{
			if ((this._SafetyStockLevel != value))
			{
				this.OnSafetyStockLevelChanging(value);
				this.SendPropertyChanging();
				this._SafetyStockLevel = value;
				this.SendPropertyChanged("SafetyStockLevel");
				this.OnSafetyStockLevelChanged();
			}
		}
	}
	
	[Column(Storage="_ReorderPoint", DbType="SmallInt NOT NULL")]
	public short ReorderPoint
	{
		get
		{
			return this._ReorderPoint;
		}
		set
		{
			if ((this._ReorderPoint != value))
			{
				this.OnReorderPointChanging(value);
				this.SendPropertyChanging();
				this._ReorderPoint = value;
				this.SendPropertyChanged("ReorderPoint");
				this.OnReorderPointChanged();
			}
		}
	}
	
	[Column(Storage="_StandardCost", DbType="Money NOT NULL")]
	public decimal StandardCost
	{
		get
		{
			return this._StandardCost;
		}
		set
		{
			if ((this._StandardCost != value))
			{
				this.OnStandardCostChanging(value);
				this.SendPropertyChanging();
				this._StandardCost = value;
				this.SendPropertyChanged("StandardCost");
				this.OnStandardCostChanged();
			}
		}
	}
	
	[Column(Storage="_ListPrice", DbType="Money NOT NULL")]
	public decimal ListPrice
	{
		get
		{
			return this._ListPrice;
		}
		set
		{
			if ((this._ListPrice != value))
			{
				this.OnListPriceChanging(value);
				this.SendPropertyChanging();
				this._ListPrice = value;
				this.SendPropertyChanged("ListPrice");
				this.OnListPriceChanged();
			}
		}
	}
	
	[Column(Storage="_Size", DbType="NVarChar(5)")]
	public string Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[Column(Storage="_SizeUnitMeasureCode", DbType="NChar(3)")]
	public string SizeUnitMeasureCode
	{
		get
		{
			return this._SizeUnitMeasureCode;
		}
		set
		{
			if ((this._SizeUnitMeasureCode != value))
			{
				this.OnSizeUnitMeasureCodeChanging(value);
				this.SendPropertyChanging();
				this._SizeUnitMeasureCode = value;
				this.SendPropertyChanged("SizeUnitMeasureCode");
				this.OnSizeUnitMeasureCodeChanged();
			}
		}
	}
	
	[Column(Storage="_WeightUnitMeasureCode", DbType="NChar(3)")]
	public string WeightUnitMeasureCode
	{
		get
		{
			return this._WeightUnitMeasureCode;
		}
		set
		{
			if ((this._WeightUnitMeasureCode != value))
			{
				this.OnWeightUnitMeasureCodeChanging(value);
				this.SendPropertyChanging();
				this._WeightUnitMeasureCode = value;
				this.SendPropertyChanged("WeightUnitMeasureCode");
				this.OnWeightUnitMeasureCodeChanged();
			}
		}
	}
	
	[Column(Storage="_Weight", DbType="Decimal(8,2)")]
	public System.Nullable<decimal> Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[Column(Storage="_DaysToManufacture", DbType="Int NOT NULL")]
	public int DaysToManufacture
	{
		get
		{
			return this._DaysToManufacture;
		}
		set
		{
			if ((this._DaysToManufacture != value))
			{
				this.OnDaysToManufactureChanging(value);
				this.SendPropertyChanging();
				this._DaysToManufacture = value;
				this.SendPropertyChanged("DaysToManufacture");
				this.OnDaysToManufactureChanged();
			}
		}
	}
	
	[Column(Storage="_ProductLine", DbType="NChar(2)")]
	public string ProductLine
	{
		get
		{
			return this._ProductLine;
		}
		set
		{
			if ((this._ProductLine != value))
			{
				this.OnProductLineChanging(value);
				this.SendPropertyChanging();
				this._ProductLine = value;
				this.SendPropertyChanged("ProductLine");
				this.OnProductLineChanged();
			}
		}
	}
	
	[Column(Storage="_Class", DbType="NChar(2)")]
	public string Class
	{
		get
		{
			return this._Class;
		}
		set
		{
			if ((this._Class != value))
			{
				this.OnClassChanging(value);
				this.SendPropertyChanging();
				this._Class = value;
				this.SendPropertyChanged("Class");
				this.OnClassChanged();
			}
		}
	}
	
	[Column(Storage="_Style", DbType="NChar(2)")]
	public string Style
	{
		get
		{
			return this._Style;
		}
		set
		{
			if ((this._Style != value))
			{
				this.OnStyleChanging(value);
				this.SendPropertyChanging();
				this._Style = value;
				this.SendPropertyChanged("Style");
				this.OnStyleChanged();
			}
		}
	}
	
	[Column(Storage="_ProductSubcategoryID", DbType="Int")]
	public System.Nullable<int> ProductSubcategoryID
	{
		get
		{
			return this._ProductSubcategoryID;
		}
		set
		{
			if ((this._ProductSubcategoryID != value))
			{
				this.OnProductSubcategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ProductSubcategoryID = value;
				this.SendPropertyChanged("ProductSubcategoryID");
				this.OnProductSubcategoryIDChanged();
			}
		}
	}
	
	[Column(Storage="_ProductModelID", DbType="Int")]
	public System.Nullable<int> ProductModelID
	{
		get
		{
			return this._ProductModelID;
		}
		set
		{
			if ((this._ProductModelID != value))
			{
				if (this._ProductModel.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductModelIDChanging(value);
				this.SendPropertyChanging();
				this._ProductModelID = value;
				this.SendPropertyChanged("ProductModelID");
				this.OnProductModelIDChanged();
			}
		}
	}
	
	[Column(Storage="_SellStartDate", DbType="DateTime NOT NULL")]
	public System.DateTime SellStartDate
	{
		get
		{
			return this._SellStartDate;
		}
		set
		{
			if ((this._SellStartDate != value))
			{
				this.OnSellStartDateChanging(value);
				this.SendPropertyChanging();
				this._SellStartDate = value;
				this.SendPropertyChanged("SellStartDate");
				this.OnSellStartDateChanged();
			}
		}
	}
	
	[Column(Storage="_SellEndDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SellEndDate
	{
		get
		{
			return this._SellEndDate;
		}
		set
		{
			if ((this._SellEndDate != value))
			{
				this.OnSellEndDateChanging(value);
				this.SendPropertyChanging();
				this._SellEndDate = value;
				this.SendPropertyChanged("SellEndDate");
				this.OnSellEndDateChanged();
			}
		}
	}
	
	[Column(Storage="_DiscontinuedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> DiscontinuedDate
	{
		get
		{
			return this._DiscontinuedDate;
		}
		set
		{
			if ((this._DiscontinuedDate != value))
			{
				this.OnDiscontinuedDateChanging(value);
				this.SendPropertyChanging();
				this._DiscontinuedDate = value;
				this.SendPropertyChanged("DiscontinuedDate");
				this.OnDiscontinuedDateChanged();
			}
		}
	}
	
	[Column(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid rowguid
	{
		get
		{
			return this._rowguid;
		}
		set
		{
			if ((this._rowguid != value))
			{
				this.OnrowguidChanging(value);
				this.SendPropertyChanging();
				this._rowguid = value;
				this.SendPropertyChanged("rowguid");
				this.OnrowguidChanged();
			}
		}
	}
	
	[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[Association(Name="Product_ProductProductPhoto", Storage="_ProductProductPhotos", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<ProductProductPhoto> ProductProductPhotos
	{
		get
		{
			return this._ProductProductPhotos;
		}
		set
		{
			this._ProductProductPhotos.Assign(value);
		}
	}
	
	[Association(Name="Product_ProductReview", Storage="_ProductReviews", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<ProductReview> ProductReviews
	{
		get
		{
			return this._ProductReviews;
		}
		set
		{
			this._ProductReviews.Assign(value);
		}
	}
	
	[Association(Name="ProductModel_Product", Storage="_ProductModel", ThisKey="ProductModelID", OtherKey="ProductModelID", IsForeignKey=true)]
	public ProductModel ProductModel
	{
		get
		{
			return this._ProductModel.Entity;
		}
		set
		{
			ProductModel previousValue = this._ProductModel.Entity;
			if (((previousValue != value) 
						|| (this._ProductModel.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProductModel.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._ProductModel.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._ProductModelID = value.ProductModelID;
				}
				else
				{
					this._ProductModelID = default(Nullable<int>);
				}
				this.SendPropertyChanged("ProductModel");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ProductProductPhotos(ProductProductPhoto entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_ProductProductPhotos(ProductProductPhoto entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_ProductReviews(ProductReview entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_ProductReviews(ProductReview entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
}

[Table(Name="Production.ProductProductPhoto")]
public partial class ProductProductPhoto : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private int _ProductPhotoID;
	
	private bool _Primary;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Product> _Product;
	
	private EntityRef<ProductPhoto> _ProductPhoto;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductPhotoIDChanging(int value);
    partial void OnProductPhotoIDChanged();
    partial void OnPrimaryChanging(bool value);
    partial void OnPrimaryChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public ProductProductPhoto()
	{
		this._Product = default(EntityRef<Product>);
		this._ProductPhoto = default(EntityRef<ProductPhoto>);
		OnCreated();
	}
	
	[Column(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[Column(Storage="_ProductPhotoID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductPhotoID
	{
		get
		{
			return this._ProductPhotoID;
		}
		set
		{
			if ((this._ProductPhotoID != value))
			{
				if (this._ProductPhoto.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductPhotoIDChanging(value);
				this.SendPropertyChanging();
				this._ProductPhotoID = value;
				this.SendPropertyChanged("ProductPhotoID");
				this.OnProductPhotoIDChanged();
			}
		}
	}
	
	[Column(Name="[Primary]", Storage="_Primary", DbType="Bit NOT NULL")]
	public bool Primary
	{
		get
		{
			return this._Primary;
		}
		set
		{
			if ((this._Primary != value))
			{
				this.OnPrimaryChanging(value);
				this.SendPropertyChanging();
				this._Primary = value;
				this.SendPropertyChanged("Primary");
				this.OnPrimaryChanged();
			}
		}
	}
	
	[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[Association(Name="Product_ProductProductPhoto", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.ProductProductPhotos.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.ProductProductPhotos.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	[Association(Name="ProductPhoto_ProductProductPhoto", Storage="_ProductPhoto", ThisKey="ProductPhotoID", OtherKey="ProductPhotoID", IsForeignKey=true)]
	public ProductPhoto ProductPhoto
	{
		get
		{
			return this._ProductPhoto.Entity;
		}
		set
		{
			ProductPhoto previousValue = this._ProductPhoto.Entity;
			if (((previousValue != value) 
						|| (this._ProductPhoto.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProductPhoto.Entity = null;
					previousValue.ProductProductPhotos.Remove(this);
				}
				this._ProductPhoto.Entity = value;
				if ((value != null))
				{
					value.ProductProductPhotos.Add(this);
					this._ProductPhotoID = value.ProductPhotoID;
				}
				else
				{
					this._ProductPhotoID = default(int);
				}
				this.SendPropertyChanged("ProductPhoto");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="Production.ProductPhoto")]
public partial class ProductPhoto : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductPhotoID;
	
	private System.Data.Linq.Binary _ThumbNailPhoto;
	
	private string _ThumbnailPhotoFileName;
	
	private System.Data.Linq.Binary _LargePhoto;
	
	private string _LargePhotoFileName;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<ProductProductPhoto> _ProductProductPhotos;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductPhotoIDChanging(int value);
    partial void OnProductPhotoIDChanged();
    partial void OnThumbNailPhotoChanging(System.Data.Linq.Binary value);
    partial void OnThumbNailPhotoChanged();
    partial void OnThumbnailPhotoFileNameChanging(string value);
    partial void OnThumbnailPhotoFileNameChanged();
    partial void OnLargePhotoChanging(System.Data.Linq.Binary value);
    partial void OnLargePhotoChanged();
    partial void OnLargePhotoFileNameChanging(string value);
    partial void OnLargePhotoFileNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public ProductPhoto()
	{
		this._ProductProductPhotos = new EntitySet<ProductProductPhoto>(new Action<ProductProductPhoto>(this.attach_ProductProductPhotos), new Action<ProductProductPhoto>(this.detach_ProductProductPhotos));
		OnCreated();
	}
	
	[Column(Storage="_ProductPhotoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductPhotoID
	{
		get
		{
			return this._ProductPhotoID;
		}
		set
		{
			if ((this._ProductPhotoID != value))
			{
				this.OnProductPhotoIDChanging(value);
				this.SendPropertyChanging();
				this._ProductPhotoID = value;
				this.SendPropertyChanged("ProductPhotoID");
				this.OnProductPhotoIDChanged();
			}
		}
	}
	
	[Column(Storage="_ThumbNailPhoto", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary ThumbNailPhoto
	{
		get
		{
			return this._ThumbNailPhoto;
		}
		set
		{
			if ((this._ThumbNailPhoto != value))
			{
				this.OnThumbNailPhotoChanging(value);
				this.SendPropertyChanging();
				this._ThumbNailPhoto = value;
				this.SendPropertyChanged("ThumbNailPhoto");
				this.OnThumbNailPhotoChanged();
			}
		}
	}
	
	[Column(Storage="_ThumbnailPhotoFileName", DbType="NVarChar(50)")]
	public string ThumbnailPhotoFileName
	{
		get
		{
			return this._ThumbnailPhotoFileName;
		}
		set
		{
			if ((this._ThumbnailPhotoFileName != value))
			{
				this.OnThumbnailPhotoFileNameChanging(value);
				this.SendPropertyChanging();
				this._ThumbnailPhotoFileName = value;
				this.SendPropertyChanged("ThumbnailPhotoFileName");
				this.OnThumbnailPhotoFileNameChanged();
			}
		}
	}
	
	[Column(Storage="_LargePhoto", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary LargePhoto
	{
		get
		{
			return this._LargePhoto;
		}
		set
		{
			if ((this._LargePhoto != value))
			{
				this.OnLargePhotoChanging(value);
				this.SendPropertyChanging();
				this._LargePhoto = value;
				this.SendPropertyChanged("LargePhoto");
				this.OnLargePhotoChanged();
			}
		}
	}
	
	[Column(Storage="_LargePhotoFileName", DbType="NVarChar(50)")]
	public string LargePhotoFileName
	{
		get
		{
			return this._LargePhotoFileName;
		}
		set
		{
			if ((this._LargePhotoFileName != value))
			{
				this.OnLargePhotoFileNameChanging(value);
				this.SendPropertyChanging();
				this._LargePhotoFileName = value;
				this.SendPropertyChanged("LargePhotoFileName");
				this.OnLargePhotoFileNameChanged();
			}
		}
	}
	
	[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[Association(Name="ProductPhoto_ProductProductPhoto", Storage="_ProductProductPhotos", ThisKey="ProductPhotoID", OtherKey="ProductPhotoID")]
	public EntitySet<ProductProductPhoto> ProductProductPhotos
	{
		get
		{
			return this._ProductProductPhotos;
		}
		set
		{
			this._ProductProductPhotos.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ProductProductPhotos(ProductProductPhoto entity)
	{
		this.SendPropertyChanging();
		entity.ProductPhoto = this;
	}
	
	private void detach_ProductProductPhotos(ProductProductPhoto entity)
	{
		this.SendPropertyChanging();
		entity.ProductPhoto = null;
	}
}

[Table(Name="Production.ProductModel")]
public partial class ProductModel : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductModelID;
	
	private string _Name;
	
	private System.Xml.Linq.XElement _CatalogDescription;
	
	private System.Xml.Linq.XElement _Instructions;
	
	private System.Guid _rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Product> _Products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductModelIDChanging(int value);
    partial void OnProductModelIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCatalogDescriptionChanging(System.Xml.Linq.XElement value);
    partial void OnCatalogDescriptionChanged();
    partial void OnInstructionsChanging(System.Xml.Linq.XElement value);
    partial void OnInstructionsChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public ProductModel()
	{
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		OnCreated();
	}
	
	[Column(Storage="_ProductModelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductModelID
	{
		get
		{
			return this._ProductModelID;
		}
		set
		{
			if ((this._ProductModelID != value))
			{
				this.OnProductModelIDChanging(value);
				this.SendPropertyChanging();
				this._ProductModelID = value;
				this.SendPropertyChanged("ProductModelID");
				this.OnProductModelIDChanged();
			}
		}
	}
	
	[Column(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[Column(Storage="_CatalogDescription", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
	public System.Xml.Linq.XElement CatalogDescription
	{
		get
		{
			return this._CatalogDescription;
		}
		set
		{
			if ((this._CatalogDescription != value))
			{
				this.OnCatalogDescriptionChanging(value);
				this.SendPropertyChanging();
				this._CatalogDescription = value;
				this.SendPropertyChanged("CatalogDescription");
				this.OnCatalogDescriptionChanged();
			}
		}
	}
	
	[Column(Storage="_Instructions", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
	public System.Xml.Linq.XElement Instructions
	{
		get
		{
			return this._Instructions;
		}
		set
		{
			if ((this._Instructions != value))
			{
				this.OnInstructionsChanging(value);
				this.SendPropertyChanging();
				this._Instructions = value;
				this.SendPropertyChanged("Instructions");
				this.OnInstructionsChanged();
			}
		}
	}
	
	[Column(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid rowguid
	{
		get
		{
			return this._rowguid;
		}
		set
		{
			if ((this._rowguid != value))
			{
				this.OnrowguidChanging(value);
				this.SendPropertyChanging();
				this._rowguid = value;
				this.SendPropertyChanged("rowguid");
				this.OnrowguidChanged();
			}
		}
	}
	
	[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[Association(Name="ProductModel_Product", Storage="_Products", ThisKey="ProductModelID", OtherKey="ProductModelID")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.ProductModel = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.ProductModel = null;
	}
}

[Table(Name="Production.ProductReview")]
public partial class ProductReview : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductReviewID;
	
	private int _ProductID;
	
	private string _ReviewerName;
	
	private System.DateTime _ReviewDate;
	
	private string _EmailAddress;
	
	private int _Rating;
	
	private string _Comments;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductReviewIDChanging(int value);
    partial void OnProductReviewIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnReviewerNameChanging(string value);
    partial void OnReviewerNameChanged();
    partial void OnReviewDateChanging(System.DateTime value);
    partial void OnReviewDateChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public ProductReview()
	{
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[Column(Storage="_ProductReviewID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductReviewID
	{
		get
		{
			return this._ProductReviewID;
		}
		set
		{
			if ((this._ProductReviewID != value))
			{
				this.OnProductReviewIDChanging(value);
				this.SendPropertyChanging();
				this._ProductReviewID = value;
				this.SendPropertyChanged("ProductReviewID");
				this.OnProductReviewIDChanged();
			}
		}
	}
	
	[Column(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[Column(Storage="_ReviewerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ReviewerName
	{
		get
		{
			return this._ReviewerName;
		}
		set
		{
			if ((this._ReviewerName != value))
			{
				this.OnReviewerNameChanging(value);
				this.SendPropertyChanging();
				this._ReviewerName = value;
				this.SendPropertyChanged("ReviewerName");
				this.OnReviewerNameChanged();
			}
		}
	}
	
	[Column(Storage="_ReviewDate", DbType="DateTime NOT NULL")]
	public System.DateTime ReviewDate
	{
		get
		{
			return this._ReviewDate;
		}
		set
		{
			if ((this._ReviewDate != value))
			{
				this.OnReviewDateChanging(value);
				this.SendPropertyChanging();
				this._ReviewDate = value;
				this.SendPropertyChanged("ReviewDate");
				this.OnReviewDateChanged();
			}
		}
	}
	
	[Column(Storage="_EmailAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EmailAddress
	{
		get
		{
			return this._EmailAddress;
		}
		set
		{
			if ((this._EmailAddress != value))
			{
				this.OnEmailAddressChanging(value);
				this.SendPropertyChanging();
				this._EmailAddress = value;
				this.SendPropertyChanged("EmailAddress");
				this.OnEmailAddressChanged();
			}
		}
	}
	
	[Column(Storage="_Rating", DbType="Int NOT NULL")]
	public int Rating
	{
		get
		{
			return this._Rating;
		}
		set
		{
			if ((this._Rating != value))
			{
				this.OnRatingChanging(value);
				this.SendPropertyChanging();
				this._Rating = value;
				this.SendPropertyChanged("Rating");
				this.OnRatingChanged();
			}
		}
	}
	
	[Column(Storage="_Comments", DbType="NVarChar(3850)")]
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this.OnCommentsChanging(value);
				this.SendPropertyChanging();
				this._Comments = value;
				this.SendPropertyChanged("Comments");
				this.OnCommentsChanged();
			}
		}
	}
	
	[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[Association(Name="Product_ProductReview", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.ProductReviews.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.ProductReviews.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
