//*****************************************************************************
//
// Microsoft Windows Media
// Copyright (C) Microsoft Corporation. All rights reserved.
//
// FileName: DBAuth.idl
//
// Abstract:
//
//*****************************************************************************
// This file will be processed by the MIDL tool to
// produce the type library (DBAuth.tlb) and marshalling code.

cpp_quote("//+-------------------------------------------------------------------------")
cpp_quote("//")
cpp_quote("//  Microsoft Windows Media Technologies")
cpp_quote("//  Copyright (C) Microsoft Corporation. All rights reserved.")
cpp_quote("//")
cpp_quote("//  Automatically generated by Midl from DBAuth.idl")
cpp_quote("//")
cpp_quote("//  DO NOT EDIT THIS FILE.")
cpp_quote("//")
cpp_quote("//--------------------------------------------------------------------------")

import "oaidl.idl";
import "ocidl.idl";


cpp_quote( "EXTERN_GUID( LIBID_DBAUTHPLUGINLib, 0x0BC95C01,0x9658,0x49B5,0xAC,0xA3,0xCB,0xEA,0x79,0xB0,0xDA,0xE6 );" )
cpp_quote( "EXTERN_GUID( CLSID_DBAuthPlugin, 0xBC8F17A9,0xB5EB,0x47F0,0x96,0x12,0x34,0x72,0x5C,0x6C,0xFA,0x32 );" )
cpp_quote( "EXTERN_GUID( CLSID_DBAuthAdmin, 0x13DDFC98,0xC330,0x4E1E,0xA7,0x22,0x62,0x4C,0x7E,0x50,0x79,0x85 );" )
cpp_quote( "EXTERN_GUID( IID_IDBAuthAdmin, 0x5D5B4932,0x8BE0,0x4FDF,0xB7,0x3C,0x49,0x06,0x81,0x3D,0x0F,0xC3 );" )

[
	object,
	uuid(0DC5B85E-2BE9-42D2-BDF7-104F1FFB48C5),
	helpstring("IDBAuthPlugin Interface"),
	pointer_default(unique)
]
interface IDBAuthPlugin : IUnknown
{
};

[
	object,
	uuid(5D5B4932-8BE0-4FDF-B73C-4906813D0FC3),
    dual,
    nonextensible,
	helpstring("IDBAuthAdmin Interface"),
	pointer_default(unique)
]
interface IDBAuthAdmin : IDispatch
{
		[helpstring("Add to allowed list of users")] HRESULT AddUser(BSTR bstrUserName);
		[helpstring("Remove from allowed list")] HRESULT RemoveUser(BSTR bstrUserName);
		[helpstring("Test to see if user is allowed access")] HRESULT VerifyUser(BSTR bstrUserName, [out, retval] VARIANT_BOOL *bFound);
		[helpstring("Get list of allowed users")] HRESULT GetUsers( [out, retval] BSTR *pbstrUserNames);
};

[
	uuid(0BC95C01-9658-49B5-ACA3-CBEA79B0DAE6),
	version(9.0),
	helpstring("DBAuth 9.0 Type Library")
]
library DBAUTHPLUGINLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

    interface IDBAuthAdmin;
};
