// <Include>
///////////////////////////////////////////////////////////////////////////////
//
// THIS FILE IS AUTOMATICALLY GENERATED.  DO NOT MODIFY IT BY HAND.
//
///////////////////////////////////////////////////////////////////////////////
// </Include>

// <Include>
#pragma once
// </Include>

// <NamespaceDeclarations>
// 
// Namespace http://example.com/stockquote/definitions
// 
#define NAMESPACE_ENCODING_DEFINITIONS WSDXML_NAMESPACE_ENCODING(0,1)
extern WSDXML_NAME Names_Definitions[];
extern WSDXML_NAMESPACE Namespace_Definitions;


#define DEFINITIONS_StockQuotePortType        WSDXML_NAME_ENCODING(0,NAMESPACE_ENCODING_DEFINITIONS)
#define DEFINITIONS_GetLastTradePriceInput    WSDXML_NAME_ENCODING(1,NAMESPACE_ENCODING_DEFINITIONS)
#define DEFINITIONS_GetLastTradePriceOutput   WSDXML_NAME_ENCODING(2,NAMESPACE_ENCODING_DEFINITIONS)
#define DEFINITIONS_GetLastTradePrice         WSDXML_NAME_ENCODING(3,NAMESPACE_ENCODING_DEFINITIONS)
#define DEFINITIONS_Body                      WSDXML_NAME_ENCODING(4,NAMESPACE_ENCODING_DEFINITIONS)
#define DEFINITIONS_TradePriceRequest         WSDXML_NAME_ENCODING(5,NAMESPACE_ENCODING_DEFINITIONS)
#define DEFINITIONS_TradePrice                WSDXML_NAME_ENCODING(6,NAMESPACE_ENCODING_DEFINITIONS)
#define DEFINITIONS_StockQuoteDeviceType      WSDXML_NAME_ENCODING(7,NAMESPACE_ENCODING_DEFINITIONS)

// 
// Namespace http://example.com/stockquote/schemas
// 
#define NAMESPACE_ENCODING_SCHEMAS WSDXML_NAMESPACE_ENCODING(1,1)
extern WSDXML_NAME Names_Schemas[];
extern WSDXML_NAMESPACE Namespace_Schemas;


#define SCHEMAS_TradePriceRequest   WSDXML_NAME_ENCODING(0,NAMESPACE_ENCODING_SCHEMAS)
#define SCHEMAS_TradePrice          WSDXML_NAME_ENCODING(1,NAMESPACE_ENCODING_SCHEMAS)
#define SCHEMAS_TickerSymbol        WSDXML_NAME_ENCODING(2,NAMESPACE_ENCODING_SCHEMAS)
#define SCHEMAS_Price               WSDXML_NAME_ENCODING(3,NAMESPACE_ENCODING_SCHEMAS)

// 
// Namespace http://www.w3.org/2001/XMLSchema
// 
#define NAMESPACE_ENCODING_XML_SCHEMA WSDXML_NAMESPACE_ENCODING(2,1)
extern WSDXML_NAME Names_XMLSchema[];
extern WSDXML_NAMESPACE Namespace_XMLSchema;


#define XMLSCHEMA_AnyType   WSDXML_NAME_ENCODING(0,NAMESPACE_ENCODING_XML_SCHEMA)

extern WSDXML_NAMESPACE* StockQuoteNamespaces[3];
#define StockQuoteRegisterNamespaces(pContext) pContext->SetNamespaces(StockQuoteNamespaces,(sizeof(StockQuoteNamespaces) / sizeof(StockQuoteNamespaces[0])),1)

// </NamespaceDeclarations>

// <NamespaceNameMacros>

#define NAME_DEFINITIONS_StockQuotePortType        (&(Names_Definitions[0]))
#define NAME_DEFINITIONS_GetLastTradePriceInput    (&(Names_Definitions[1]))
#define NAME_DEFINITIONS_GetLastTradePriceOutput   (&(Names_Definitions[2]))
#define NAME_DEFINITIONS_GetLastTradePrice         (&(Names_Definitions[3]))
#define NAME_DEFINITIONS_Body                      (&(Names_Definitions[4]))
#define NAME_DEFINITIONS_TradePriceRequest         (&(Names_Definitions[5]))
#define NAME_DEFINITIONS_TradePrice                (&(Names_Definitions[6]))
#define NAME_DEFINITIONS_StockQuoteDeviceType      (&(Names_Definitions[7]))


#define NAME_SCHEMAS_TradePriceRequest   (&(Names_Schemas[0]))
#define NAME_SCHEMAS_TradePrice          (&(Names_Schemas[1]))
#define NAME_SCHEMAS_TickerSymbol        (&(Names_Schemas[2]))
#define NAME_SCHEMAS_Price               (&(Names_Schemas[3]))


#define NAME_XMLSCHEMA_AnyType   (&(Names_XMLSchema[0]))

// </NamespaceNameMacros>

// <StructDeclarations>
typedef struct _TRADE_PRICE_REQUEST TRADE_PRICE_REQUEST;
typedef struct _TRADE_PRICE TRADE_PRICE;

// </StructDeclarations>

// <StructDefinitions>
// 
// Structure definition TRADE_PRICE_REQUEST
// 
struct _TRADE_PRICE_REQUEST
{
    const WCHAR* tickerSymbol;
};

// 
// Structure definition TRADE_PRICE
// 
struct _TRADE_PRICE
{
    float price;
};

// </StructDefinitions>

// <EnumerationValueDeclarations>
// </EnumerationValueDeclarations>

// <TypeTableDeclarations>
#define TYPE_ENCODING_TRADE_PRICE_REQUEST WSDXML_TYPE_ENCODING(0,1)
extern WSDXML_TYPE Type_TRADE_PRICE_REQUEST;

#define TYPE_ENCODING_TRADE_PRICE WSDXML_TYPE_ENCODING(1,1)
extern WSDXML_TYPE Type_TRADE_PRICE;


extern WSDXML_TYPE* StockQuoteTypes[2];

// StockQuoteRegisterTypes is used to register field types
// with an XML context so it can look up matching type tables.
#define StockQuoteRegisterTypes(pContext) pContext->SetTypes(StockQuoteTypes,(sizeof(StockQuoteTypes) / sizeof(StockQuoteTypes[0])),1)

// </TypeTableDeclarations>

// <MessageStructureDefinitions>
//
// Port type http://example.com/stockquote/definitions/StockQuotePortType
// Message structure definitions
//
typedef struct
{
    TRADE_PRICE_REQUEST* body;
}
REQUESTBODY_StockQuotePortType_GetLastTradePrice;

typedef struct
{
    TRADE_PRICE* body;
}
RESPONSEBODY_StockQuotePortType_GetLastTradePrice;

//
// Port type http://example.com/stockquote/definitions/StockQuoteDeviceType
// Message structure definitions
//
// </MessageStructureDefinitions>

// <PortTypeDeclarations>
// 
// Port type http://example.com/stockquote/definitions/StockQuotePortType
// 
extern WSD_OPERATION Operations_StockQuotePortType[1];
extern WSD_PORT_TYPE PortType_StockQuotePortType;


// </PortTypeDeclarations>

// <RelationshipMetadataDeclaration>
extern WSD_HOST_METADATA hostMetadata;
// </RelationshipMetadataDeclaration>

// <ThisModelMetadataDeclaration>
extern WSD_THIS_MODEL_METADATA thisModelMetadata;
// </ThisModelMetadataDeclaration>

// <HostBuilderDeclaration>
HRESULT CreateStockQuoteHost(
                LPCWSTR pszDeviceAddress,
                const WSD_THIS_DEVICE_METADATA* pThisDeviceMetadata,
                IStockQuote* pIStockQuote,
                IWSDDeviceHost** pHostOut,
                IWSDXMLContext** ppContextOut);
// </HostBuilderDeclaration>

// <StubDeclarations>
HRESULT __stdcall
Stub_GetLastTradePrice
(   IUnknown* server
,   IWSDServiceMessaging* service
,   WSD_EVENT* event
);

// </StubDeclarations>

