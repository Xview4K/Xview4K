<?xml version="1.0" encoding="utf-8"?>
<wsdcodegen ConfigFileVersion="1.3">
  <LayerPrefix>FileService</LayerPrefix>
  <LayerNumber>1</LayerNumber>
  <!--************************************************************-->
  <!--*** WSDLS TO BE INCLUDED ***-->
  <!--************************************************************-->
  <Wsdl PrefixMessageStructureNames="true">
    <Path>FileService.wsdl</Path>
  </Wsdl>


  <!--************************************************************-->
  <!--*** METADATA CONFIGURATION ***-->
  <!--Be sure to change all default fields in ThisModelMetadata!-->
  <!--All fields except <manufacturer> and <modelName> are optional.-->
  <!--************************************************************-->
  <ThisModelMetadata>
    <Manufacturer>Microsoft Corporation</Manufacturer>
    <ManufacturerURL>http://www.microsoft.com</ManufacturerURL>
    <ModelName>Microsoft FileService Device Emulator</ModelName>
    <ModelNumber>MFSDE-0001</ModelNumber>
    <ModelUrl>http://www.microsoft.com</ModelUrl>
  </ThisModelMetadata>

  <!--Hosts built with this metadata can support all of these services.-->
  <RelationshipMetadata>
    <HostMetadata>
      <Host>
        <Types>http://www.example.org/ncd/FileService/:FileDevice</Types>
        <ServiceId>http://www.example.org/ncd/FileService/FileDevice</ServiceId>
      </Host>
      <Hosted>
        <Types>http://www.example.com/ncd/FileService/:FileService</Types>
        <ServiceId>http://www.example.com/ncd/FileService/FileService0</ServiceId>
      </Hosted>
    </HostMetadata>
  </RelationshipMetadata>

  <!--This Macro will be included in all header files.-->
  <Macro Name="PragmaOnce">
<![CDATA[
#pragma once
]]>
  </Macro>
  <!--Additionally, the predefined "DoNotModify" macro will be included in all files.-->


  <!--************************************************************-->
  <!--*** TYPES HEADER FILE ***-->
  <!--This file contains forward declarations and structure definitions.-->
  <!--************************************************************-->
  <File Name="FileServiceTypes.h">
    <Include Macro="DoNotModify" />
    <Include Macro="PragmaOnce" />
    <NamespaceDeclarations />
    <NamespaceNameMacros />
    <StructDeclarations />
    <StructDefinitions />
    <EnumerationValueDeclarations />
    <TypeTableDeclarations />
    <MessageStructureDefinitions />
    <PortTypeDeclarations />
    <RelationshipMetadataDeclaration />
    <ThisModelMetadataDeclaration />
    <HostBuilderDeclaration>
      <Interface>IFileService</Interface>
    </HostBuilderDeclaration>
    <StubDeclarations>
      <PortType>http://www.example.com/ncd/FileService/FileService</PortType>
    </StubDeclarations>
  </File>


  <!--************************************************************-->
  <!--*** TYPES FILE ***-->
  <!--This file contains type table and operation definitions.-->
  <!--************************************************************-->
  <File Name="FileServiceTypes.cpp">
    <Include Macro="DoNotModify" />
    <LiteralInclude Language="C" Local="False">wsdapi.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">FileService.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">FileServiceTypes.h</LiteralInclude>
    <NamespaceDefinitions />
    <TypeTableDefinitions />
    <MessageTypeDefinitions />
    <PortTypeDefinitions>
      <PortType>http://www.example.com/ncd/FileService/FileService</PortType>
      <StubFunction>True</StubFunction>
    </PortTypeDefinitions>
    <RelationshipMetadataDefinition />
    <ThisModelMetadataDefinition />
  </File>


  <!--************************************************************-->
  <!--*** INTERFACE IDL ***-->
  <!--This file defines the interfaces for the specified services.-->
  <!--************************************************************-->
  <File Name="FileService.idl">
    <Include Macro="DoNotModify" />
<![CDATA[
interface IFileService;
interface IFileServiceEventNotify;
]]>
    <LiteralInclude Language="IDL">oaidl.idl</LiteralInclude>
    <LiteralInclude Language="IDL">ocidl.idl</LiteralInclude>
    <LiteralInclude Language="IDL">wsdattachment.idl</LiteralInclude>
    <LiteralInclude Language="IDL">wsdclient.idl</LiteralInclude>
    <LiteralInclude Language="IDL">wsdhost.idl</LiteralInclude>
    <LiteralInclude Language="IDL">FileServiceTypes.h</LiteralInclude>
<![CDATA[
//
// IFileService Interface
//
[
    object,
    uuid(465a969e-ce02-4b7c-a232-80ebbf0b8284),
    helpstring("IFileService Interface"),
    pointer_default(unique),
    restricted,
    local
]
interface IFileService : IUnknown
{
]]>
    <IdlFunctionDeclarations>
      <PortType>http://www.example.com/ncd/FileService/FileService</PortType>
    </IdlFunctionDeclarations>
<![CDATA[
};
]]>
<![CDATA[
//
// IFileServiceEventNotify Interface
//
[
    object,
    uuid(5c2c258b-fb5d-4f94-9b8b-e132b6e2d593),
    helpstring("IFileServiceEventNotify Interface"),
    pointer_default(unique),
    restricted,
    local
]
interface IFileServiceEventNotify : IUnknown
{
]]>
    <IdlFunctionDeclarations Events="True">
      <PortType>http://www.example.com/ncd/FileService/FileService</PortType>
    </IdlFunctionDeclarations>
<![CDATA[
};
]]>
  </File>


  <!--************************************************************-->
  <!--*** PROXY HEADER FILES ***-->
  <!--This file contains declarations for proxy classes and builder functions.-->
  <!--************************************************************-->
  <File Name="FileServiceProxy.h">
    <Include Macro="DoNotModify" />
    <Include Macro="PragmaOnce" />
<![CDATA[
class CFileServiceProxy;
class CFileServiceEventSource;
]]>
    <EventSourceBuilderDeclarations>
      <ProxyClass>CFileServiceEventSource</ProxyClass>
    </EventSourceBuilderDeclarations>
<![CDATA[
class CFileServiceEventSource: public IFileServiceEventNotify
{
protected:
    ~CFileServiceEventSource();
    LONG m_cRef;
    IWSDDeviceHost* m_host;
    const WCHAR* m_serviceId;

public:
    HRESULT STDMETHODCALLTYPE Init(IWSDDeviceHost* pIWSDDeviceHost, const WCHAR* serviceId);
    CFileServiceEventSource();
]]>
    <IUnknownDeclarations />
    <FunctionDeclarations Events="True">
      <PortType>http://www.example.com/ncd/FileService/FileService</PortType>
    </FunctionDeclarations>
<![CDATA[
};
]]>
  </File>


  <!--************************************************************-->
  <!--*** PROXY FILE ***-->
  <!--This file contains code for proxy classes and functions.-->
  <!--************************************************************-->
  <File Name="FileServiceProxy.cpp">
    <Include Macro="DoNotModify" />
    <LiteralInclude Language="C" Local="False">wsdapi.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">FileService.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">FileServiceTypes.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">FileServiceProxy.h</LiteralInclude>
    <EventSourceBuilderImplementations>
      <ProxyClass>CFileServiceEventSource</ProxyClass>
    </EventSourceBuilderImplementations>
<![CDATA[
CFileServiceEventSource::CFileServiceEventSource() :
    m_cRef(1), m_host(NULL)
{
}

CFileServiceEventSource::~CFileServiceEventSource() 
{
    if ( NULL != m_host )
    {
        m_host->Release();
        m_host = NULL;
    }
};

HRESULT STDMETHODCALLTYPE CFileServiceEventSource::Init(
    /* [in] */ IWSDDeviceHost* pIWSDDeviceHost,
    /* [in] */ const WCHAR* serviceId )
{
    if( NULL == pIWSDDeviceHost )
    {
        return E_INVALIDARG;
    }

    m_serviceId = serviceId;

    m_host = pIWSDDeviceHost;
    m_host->AddRef();

    return S_OK;
}
]]>
    <IUnknownDefinitions>
      <ProxyClass>CFileServiceEventSource</ProxyClass>
      <RefCountVar>m_cRef</RefCountVar>
      <Interface>IFileServiceEventNotify</Interface>
    </IUnknownDefinitions>
    <ProxyFunctionImplementations Events="True">
      <PortType>http://www.example.com/ncd/FileService/FileService</PortType>
      <ProxyClass>CFileServiceEventSource</ProxyClass>
    </ProxyFunctionImplementations>
  </File>


  <!--************************************************************-->
  <!--*** STUB FILE ***-->
  <!--This file contains stub function code.-->
  <!--************************************************************-->
  <File Name="FileServiceStub.cpp">
    <Include Macro="DoNotModify" />
    <LiteralInclude Language="C" Local="False">wsdapi.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">FileService.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">FileServiceTypes.h</LiteralInclude>
    <MessageTypeDeclarations />
    <HostBuilderImplementation>
      <HostedService>
        <ServiceId>http://www.example.com/ncd/FileService/FileService0</ServiceId>
        <CodeName>FileService</CodeName>
        <Interface>IFileService</Interface>
      </HostedService>
    </HostBuilderImplementation>
    <StubDefinitions>
      <PortType>http://www.example.com/ncd/FileService/FileService</PortType>
      <ServerClass>IFileService</ServerClass>
      <Deallocator>WSDFreeLinkedMemory</Deallocator>
    </StubDefinitions>
  </File>


  <!--************************************************************-->
  <!--*** README FILE ***-->
  <!--This file contains readme text.-->
  <!---->
  <!--Changes made to the contents of the metadata section of this-->
  <!--configuration file will not impact the accuracy of the Readme.txt-->
  <!--file, but more significant changes may render the Readme.txt file-->
  <!--inaccurate.-->
  <!--************************************************************-->
  <File Name="Readme.txt">
<![CDATA[=== Index ====================================================================
* Quick start guide
  + Service
  + Compiling
* Generated files
* Generated interfaces
  + Base interfaces
  + Event notify interfaces
* Generated classes
  + Event source classes
* Generated functions
  + Host builder function
  + Stub functions
* Generated structures
  + Metadata structures
  + Parameter structures




=== Quick start guide ========================================================
--- Service --------------------------
To build a host application, implement the IFileService service interface.
Then, pass this object into the host builder function,
CreateFileServiceHost() (see below).  Lastly, call Start()
on the resulting IWSDDeviceHost object.



--- Compiling -----------------------
All generated files must be compiled together into one static library,
executable, or DLL.

The generated IDL file (FileService.idl) may be compiled into
C++ files with the MIDL tool.  The other generated files require that
FileService.idl will be compiled into FileService.h.




=== Generated files ==========================================================
* FileServiceTypes.h    Forward-declarations and struct definitions
* FileServiceTypes.cpp  Type table and operation structure definitions
* FileService.idl       Defines the interfaces for the specified services
* FileServiceProxy.h    Declares proxy classes and builder functions
* FileServiceProxy.cpp  Proxy class and function implementations
* FileServiceStub.cpp   Stub function code



=== Generated interfaces =====================================================
--- Base interfaces ------------------
* IFileService

These base interfaces are generated directly by the WSDL, and are used to
implement your service.  Clients should use the extended proxy classes,
below.  No eventing operations are included in these base interfaces.

Your service objects should implement these interfaces.



--- Event notify interfaces ----------
* IFileServiceEventNotify

These event notify interfaces are used by services to issue events, and are
implemented by client code to receive events.  Subscription management is
handled separately in the proxy interfaces (listed above).

Your service code should instantiate objects that expose these interfaces
using the event source builder functions (see below), and should call into
the exposed methods.

You should build a client object that implements these interfaces, and
register that object when subscribing for events.  Your object will receive
callbacks when you receive events from the service.



=== Generated classes ========================================================
--- Event source classes -------------
* CFileServiceEventSource

These event source classes can be called from your service, and will issue
events to subscribed clients.  To instantiate one of these classes, use a
event source builder function (see below).




=== Generated functions ======================================================
--- Host builder function ------------
* CreateFileServiceHost()

Use this function to create a host and register your service(s).


--- Event source builder functions ---
* CreateCFileServiceEventSource()

Use these functions to generate event source classes (see above).



--- Stub functions -------------------
These functions receive calls from WSDAPI and dispatch them into your
service object.  You should not call these functions from your application.




=== Generated structures =====================================================
--- Metadata structures --------------
* WSD_HOST_METADATA hostMetadata
* WSD_THIS_MODEL_METADATA thisModelMetadata

Pass these structures to your host builder function (see above).



--- Parameter structures -------------
All parameter structures are defined inside FileServiceTypes.h.
]]>
  </File>
</wsdcodegen>