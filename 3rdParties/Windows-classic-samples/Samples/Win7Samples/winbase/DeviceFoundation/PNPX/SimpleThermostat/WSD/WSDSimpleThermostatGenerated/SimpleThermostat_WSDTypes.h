// <Include>
///////////////////////////////////////////////////////////////////////////////
//
// THIS FILE IS AUTOMATICALLY GENERATED.  DO NOT MODIFY IT BY HAND.
//
///////////////////////////////////////////////////////////////////////////////
// </Include>

// <Include>
#pragma once
// </Include>

// <NamespaceDeclarations>
// 
// Namespace http://schemas.microsoft.com/windows/pnpx/2005/10
// 
#define NAMESPACE_ENCODING_PNPX WSDXML_NAMESPACE_ENCODING(0,1)
extern WSDXML_NAME Names_PnPX[];
extern WSDXML_NAMESPACE Namespace_PnPX;


#define PNPX_DeviceCategory   WSDXML_NAME_ENCODING(0,NAMESPACE_ENCODING_PNPX)
#define PNPX_HardwareId       WSDXML_NAME_ENCODING(1,NAMESPACE_ENCODING_PNPX)
#define PNPX_CompatibleId     WSDXML_NAME_ENCODING(2,NAMESPACE_ENCODING_PNPX)

// 
// Namespace http://www.example.com/ncd/Thermostat
// 
#define NAMESPACE_ENCODING_THERMOSTAT WSDXML_NAMESPACE_ENCODING(1,1)
extern WSDXML_NAME Names_Thermostat[];
extern WSDXML_NAMESPACE Namespace_Thermostat;


#define THERMOSTAT_SimpleThermostat_WSD   WSDXML_NAME_ENCODING(0,NAMESPACE_ENCODING_THERMOSTAT)
#define THERMOSTAT_NoParameters           WSDXML_NAME_ENCODING(1,NAMESPACE_ENCODING_THERMOSTAT)
#define THERMOSTAT_OneInt                 WSDXML_NAME_ENCODING(2,NAMESPACE_ENCODING_THERMOSTAT)
#define THERMOSTAT_GetCurrentTemp         WSDXML_NAME_ENCODING(3,NAMESPACE_ENCODING_THERMOSTAT)
#define THERMOSTAT_Temp                   WSDXML_NAME_ENCODING(4,NAMESPACE_ENCODING_THERMOSTAT)
#define THERMOSTAT_GetDesiredTemp         WSDXML_NAME_ENCODING(5,NAMESPACE_ENCODING_THERMOSTAT)
#define THERMOSTAT_SetDesiredTemp         WSDXML_NAME_ENCODING(6,NAMESPACE_ENCODING_THERMOSTAT)

extern WSDXML_NAMESPACE* SimpleThermostat_WSDNamespaces[2];
#define SimpleThermostat_WSDRegisterNamespaces(pContext) pContext->SetNamespaces(SimpleThermostat_WSDNamespaces,(sizeof(SimpleThermostat_WSDNamespaces) / sizeof(SimpleThermostat_WSDNamespaces[0])),1)

// </NamespaceDeclarations>

// <StructDeclarations>

// </StructDeclarations>

// <StructDefinitions>
// </StructDefinitions>

// <EnumerationValueDeclarations>
// </EnumerationValueDeclarations>

// <TypeTableDeclarations>
#define SimpleThermostat_WSDRegisterTypes(pContext) S_OK

// </TypeTableDeclarations>

// <MessageStructureDefinitions>
//
// Port type http://www.example.com/ncd/Thermostat/SimpleThermostat_WSD
// Message structure definitions
//
typedef struct
{
    LONG temp;
}
RESPONSEBODY_SimpleThermostat_WSD_GetCurrentTemp;

typedef struct
{
    LONG temp;
}
RESPONSEBODY_SimpleThermostat_WSD_GetDesiredTemp;

typedef struct
{
    LONG temp;
}
REQUESTBODY_SimpleThermostat_WSD_SetDesiredTemp;

// </MessageStructureDefinitions>

// <PortTypeDeclarations>
// 
// Port type http://www.example.com/ncd/Thermostat/SimpleThermostat_WSD
// 
extern WSD_OPERATION Operations_SimpleThermostat_WSD[];
extern WSD_PORT_TYPE PortType_SimpleThermostat_WSD;

// </PortTypeDeclarations>

// <RelationshipMetadataDeclaration>
extern WSD_HOST_METADATA hostMetadata;
// </RelationshipMetadataDeclaration>

// <ThisModelMetadataDeclaration>
extern WSD_THIS_MODEL_METADATA thisModelMetadata;
// </ThisModelMetadataDeclaration>

// <HostBuilderDeclaration>
HRESULT CreateSimpleThermostat_WSDHost(
                LPCWSTR pszDeviceAddress,
                const WSD_THIS_DEVICE_METADATA* pThisDeviceMetadata,
                ISimpleThermostat_WSD* pISimpleThermostat_WSD,
                IWSDDeviceHost** pHostOut,
                IWSDXMLContext** ppContextOut);
// </HostBuilderDeclaration>

// <StubDeclarations>
HRESULT
Stub_GetCurrentTemp
(   IUnknown* server
,   IWSDServiceMessaging* service
,   WSD_EVENT* event
);

HRESULT
Stub_GetDesiredTemp
(   IUnknown* server
,   IWSDServiceMessaging* service
,   WSD_EVENT* event
);

HRESULT
Stub_SetDesiredTemp
(   IUnknown* server
,   IWSDServiceMessaging* service
,   WSD_EVENT* event
);

// </StubDeclarations>

